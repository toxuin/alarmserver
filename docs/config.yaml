debug: false

hikvision:
  enabled: true
  cams:
    myCam:
      address: 192.168.1.69
      https: false
      username: admin
      password: admin1234
      rawTcp: false
    myDoorbell:
      address: 192.168.1.13
      https: false
      username: admin
      password: admin666
      # USE RAW TCP IF HTTP STREAMING DOES NOT WORK
      rawTcp: true

hisilicon:
  enabled: true
  port: 15002

dahua:
  enabled: true
  cams:
    myCam:
      address: 192.168.1.13
      https: false
      username: admin
      password: admin1234
      # USE channel FOR NVRs TO SELECT THE CAMERA, IF NOT USED - DELETE OR COMMENT
      channel: 1
      # IF ALL EVENTS ARE NEEDED - DELETE OR COMMENT FOLLOWING LINE
      events: VideoMotion,CrossLineDetection,AlarmLocal,VideoLoss,VideoBlind

ftp:
  enabled: true
  port: 21
  password: "root"
  allowFiles: true
  rootPath: "./ftp"
  # THE FOLLOWING SETTINGS ARE OPTIONAL. Mainly intended for proper connectivity when running in Docker container
  publicIp: "192.168.0.2"
  # Export these ports in the container config "-p 21000-21010:21000-21010"
  passivePorts: "21000-21010"


mqtt:
  enabled: true
  username: alarmserver
  password: "assword"
  port: 1883
  server: "mqtt.example.com"
  topicroot: camera-alerts

webhooks:
  enabled: true
  items:
    - url: "https://webhook.site/52d57401-0ea3-4e43-80a0-ceb02fba2d1e"
      method: "GET" # DEFAULTS TO POST
      headers:
        - "X-Beep: boop"

      # YOU CAN USE TEMPLATE VARIABLES TO FORM THE URL: .Camera, .Event, .Extra
    - url: "https://example.com/webhooks/{{ .Camera }}/events/{{ .Event }}"
      # YOU CAN ALSO USE TEMPLATE VARIABLES IN THE PAYLOAD BODY!
      # BELOW EXAMPLE DELIVERS RAW EVENT TO THE ENDPOINT
      bodyTemplate: '{{ .Extra }}'

    - url: "https://api.telegram.org/bot121212121:token/sendMessage?chat_id=43434343434&text=hello"

  # SIMPLE SHORTHAND FORM FOR THE SAME STUFF AS ABOVE, WILL PERFORM A POST TO EACH URL
  urls:
    - "https://example.com/camera-webhooks"
    - "https://example.com/another-endpoint"
